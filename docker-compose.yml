services:
  structurizr:
    image: structurizr/lite
    ports:
      - "8080:8080"
    volumes:
      - ./docs:/usr/local/structurizr

  patient-service:
    build: 
      context: .
      dockerfile: PatientService/Dockerfile
    environment:
      - REDIS_HOST=redis
      - ConnectionStrings__DefaultConnection=Server=db-master;Database=BloodPressureTracker;User=root;Password=password
    depends_on:
      redis:
        condition: service_healthy
      db-master:
        condition: service_healthy
    networks:
      - backend
    deploy:
      replicas: 3

  measurement-service:
    build: 
      context: .
      dockerfile: MeasurementService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=db-master;Database=BloodPressureTracker;User=root;Password=password
    depends_on:
      db-master:
       condition: service_healthy
    networks:
      - backend
    deploy:
      replicas: 3
  
  db-master:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: BloodPressureTracker
      MYSQL_REPLICATION_USER: repl_user
      MYSQL_REPLICATION_PASSWORD: repl_password
    ports:
      - "3306:3306"
    volumes:
      - db-master-data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: >
      --server-id=1
      --log-bin=mysql-bin

  db-slave:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: BloodPressureTracker
      MYSQL_REPLICATION_USER: repl_user
      MYSQL_REPLICATION_PASSWORD: repl_password
      MYSQL_MASTER_HOST: db-master
      MYSQL_MASTER_USER: repl_user
      MYSQL_MASTER_PASSWORD: repl_password
      MYSQL_MASTER_PORT: 3306
    networks:
      - backend
    depends_on:
      db-master:
        condition: service_healthy
    command: >
      mysqld
      --server-id=2
      --log-bin=mysql-bin
      --relay-log=mysql-relay-bin
      --log-slave-updates
      --read-only=1
    volumes:
      - db-slave-data:/var/lib/mysql
  
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    depends_on:
      - patient-service
      - measurement-service
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - backend
  
  redis:
    image: redis:latest
    networks:
      - backend
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5

volumes:
  db-master-data:
  db-slave-data:

networks:
  backend:
    driver: bridge